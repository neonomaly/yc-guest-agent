# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
builds:
  -
    # ID of the build.
    id: "yandex-guest-agent-linux"

    # Path to main.go file or main package.
    main: ./linux/yandex-guest-agent/yandex-guest-agent.go

    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    # Default is the name of the project directory.
    binary: yandex-guest-agent

    env:
      - CGO_ENABLED=0

    # Custom ldflags templates.
    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
    ldflags:
      - -s -w -X main.build={{.Version}}

    # GOOS list to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are darwin, linux, and windows.
    goos:
      - linux

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386, amd64 and arm64.
    goarch:
      - amd64

archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
# .goreleaser.yaml
nfpms:
  # note that this is an array of nfpm configs
  -
    # ID of the nfpm config, must be unique.
    # Defaults to "default".
    id: yandex-guest-agent

    # Name of the package.
    # Defaults to `ProjectName`.
    package_name: yandex-guest-agent

    # You can change the file name of the package.
    #
    # Default:`{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}`
    file_name_template: "{{ .ConventionalFileName }}"

    # Build IDs for the builds you want to create NFPM packages for.
    # Defaults empty, which means no filtering.
    builds:
      - yandex-guest-agent-linux

    # Your app's vendor.
    # Default is empty.
    vendor: Yandex LLC

    # Template to your app's homepage.
    homepage: https://github.com/yandex-cloud/yc-guest-agent

    # Your app's maintainer (probably you).
    maintainer: Nikolay Matrosov <nikthespirit@yandex-team.ru>

    # Template to your app's description.
    description: |-
      Yandex Cloud Guest Agent install package.

    license: MIT

    # Formats to be generated.
    formats:
      - deb

    # Template to the path that the binaries should be installed.
    # Defaults to `/usr/bin`.
    bindir: /opt/yandex-guest-agent

    # Version Metadata (previously deb.metadata).
    # Default is extracted from `version` if it is semver compatible.
    # Setting metadata might interfere with version comparisons depending on the
    # packager.
    version_metadata: git

    # Section.
    section: default

    # Priority.
    priority: extra

    contents:
      - src: linux/scripts/yandex-guest-agent.service
        dst: /usr/lib/systemd/system/yandex-guest-agent.service
      - src: /opt/yandex-guest-agent/yandex-guest-agent
        dst: /usr/local/bin/yandex-guest-agent
        type: "symlink"

    # Scripts to execute during the installation of the package. (overridable)
    #
    # Keys are the possible targets during the installation process
    # Values are the paths to the scripts which will be executed.
    scripts:
      postinstall: "linux/scripts/postinstall.sh"
      postremove: "linux/scripts/postremove.sh"

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
signs:
  - artifacts: all
    args: ["--batch", "-u", "{{ .Env.GPG_FINGERPRINT }}", "--output", "${signature}", "--detach-sign", "${artifact}"]

blobs:
  # You can have multiple blob configs
  -
    provider: s3
    endpoint: https://storage.yandexcloud.net
    region: ru-central1
    bucket: yandexcloud-guestagent

    # IDs of the artifacts you want to upload.
    ids:
      - yandex-guest-agent-linux

    # Template for the path/name inside the bucket.
    # Default is `{{ .ProjectName }}/{{ .Tag }}`
    folder: "yandex-guest-agent-linux/{{.Version}}"

# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
